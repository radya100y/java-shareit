drop table if exists public.comments;
drop table if exists public.bookings;
drop table if exists public.items;
drop table if exists public.requests;
drop table if exists public.users;
drop type if exists public.booking_status;

CREATE TABLE IF NOT EXISTS public.users
(
    id bigint generated by default as identity not null primary key
    , name varchar(255) NOT NULL
    , email varchar(512) NOT NULL
    , constraint UQ_USER_EMAIL unique (email)
);
create table if not exists public.requests
(
    id bigint generated by default as identity not null primary key
    , description varchar(1024) not null
    , user_id bigint not null
    , created timestamp not null
    , foreign key (user_id) references users(id) on delete cascade
);
create table if not exists public.items
(
    id bigint generated by default as identity not null primary key
    , name varchar(255) not null
    , description varchar(512) not null
    , available bool not null default true
    , owner_id bigint not null
    , request_id bigint null
    , foreign key (owner_id) references users(id) on delete cascade
    , foreign key (request_id) references requests(id)
);
create type public.booking_status as enum('WAITING', 'APPROVED', 'REJECTED');
create table if not exists public.bookings
(
    id bigint generated by default as identity not null primary key
    , item_id bigint not null
    , pb timestamp not null
    , pe timestamp not null
    , status booking_status not null default 'WAITING'
    , user_id bigint not null
    , foreign key (item_id) references items(id) on delete cascade
    , foreign key (user_id) references users(id) on delete cascade
);
create table if not exists public.comments
(
    id bigint generated by default as identity not null primary key
    , item_id bigint not null
    , user_id bigint not null
    , comment varchar(1024) not null
    , created timestamp not null
    , foreign key (item_id) references items(id) on delete cascade
    , foreign key (user_id) references users(id) on delete cascade
);